// ※ popup창 js

// data속에 이미지랑 타이틀을 배열로 집어넣는다.
const data = [
    {
    title : '토끼',
    imgUrl : './img/ra.jpg'
    },
    {
    title : '코알라',
    imgUrl : './img/co.jpg'
    },
    {
    title : '여우',
    imgUrl : './img/fox.jpg'
    },
    {
    title : '호랑이',
    imgUrl : './img/ho.jpg'
    }
];

// .gallery ul 태그를 선택하는 변수 elUl 생성
const elUl = document.querySelector('.gallery ul');

// 내용을 집어넣을 수 있는 변수 tagElement 생성
let tagElement = '';

// tagElement에 li의 데이터 인덱스값이 차례대로 들어가고,
// 그 안에 이미지가 순서대로 들어가는 forEach 반복문을 만든다.
// 만든 값은 누적이 될 수 있게 tagElement에 += 연산자로 집어넣기.
data.forEach(function(item, idx){
    tagElement += `<li data-num="${idx}"><img src="${item.imgUrl}" alt=""></li>`
})
// elUl 변수에 tagElement을 넣는다.
elUl.innerHTML = tagElement;

// li와 팝업 변수 선언
const elItems = document.querySelectorAll('.gallery li')
const elPopup = document.querySelector('.popup')

// li 반복문을 만드는데,
elItems.forEach(function(item, idx){
    // < this.dataset.num -> item의 데이터값을 가져옴. >
    //  item(elItems)를 클릭하면, num이라고 선언한 item의 데이터 인덱스값이
    // 팝업(elPopup)에 들어가게 되는 div를 수정시킨다.
    item.onclick = function(){
        let num = this.dataset.num;
        elPopup.innerHTML =
        // (data[num]->li의 값의 imgUrl-> 이미지를 가져옴)
        // 마찬가지로 title도 변경시킨다.
        `<div>
        <img src="${data[num].imgUrl}" width="400px">
        <p>${data[num].title}</p>
        </div>`;
        // 팝업이 보여질 수 있도록 active 클래스를 추가한다.
        elPopup.classList.add('active');
    }
})

// ※ 다른 곳을 누르면 팝업창이 닫히게 하기
// target(이벤트가 발생한 대상(요소) 얻기)

// e.target.classList.contains('.popup')
// ㄴ 내가 선택한 요소에 .popup 이란 클래스가 포함되어 있나?
// ㄴ 답을 true, false로 알려줌(contains 역할)

// e.target.className -> 가진 클래스 이름 모두 불러오기

// elPopup을 클릭했을때 만약 내가 선택한 요소가
// popup 클래스를 포함하고 있다면, elPopup에서 active 클래스를 삭제하라
elPopup.onclick = function (e) {
    if(e.target.classList.contains('popup')){
        elPopup.classList.remove('active');
    }
}